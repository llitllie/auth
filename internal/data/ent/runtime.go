// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/llitllie/auth/internal/data/ent/account"
	"github.com/llitllie/auth/internal/data/ent/schema"
	"github.com/llitllie/auth/internal/data/ent/token"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	accountMixin := schema.Account{}.Mixin()
	accountMixinFields0 := accountMixin[0].Fields()
	_ = accountMixinFields0
	accountFields := schema.Account{}.Fields()
	_ = accountFields
	// accountDescCreateTime is the schema descriptor for create_time field.
	accountDescCreateTime := accountMixinFields0[0].Descriptor()
	// account.DefaultCreateTime holds the default value on creation for the create_time field.
	account.DefaultCreateTime = accountDescCreateTime.Default.(func() time.Time)
	// accountDescUpdateTime is the schema descriptor for update_time field.
	accountDescUpdateTime := accountMixinFields0[1].Descriptor()
	// account.DefaultUpdateTime holds the default value on creation for the update_time field.
	account.DefaultUpdateTime = accountDescUpdateTime.Default.(func() time.Time)
	// account.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	account.UpdateDefaultUpdateTime = accountDescUpdateTime.UpdateDefault.(func() time.Time)
	// accountDescEmail is the schema descriptor for email field.
	accountDescEmail := accountFields[0].Descriptor()
	// account.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	account.EmailValidator = accountDescEmail.Validators[0].(func(string) error)
	// accountDescSecret is the schema descriptor for secret field.
	accountDescSecret := accountFields[1].Descriptor()
	// account.SecretValidator is a validator for the "secret" field. It is called by the builders before save.
	account.SecretValidator = accountDescSecret.Validators[0].(func(string) error)
	// accountDescStatus is the schema descriptor for status field.
	accountDescStatus := accountFields[2].Descriptor()
	// account.DefaultStatus holds the default value on creation for the status field.
	account.DefaultStatus = accountDescStatus.Default.(bool)
	tokenMixin := schema.Token{}.Mixin()
	tokenMixinFields0 := tokenMixin[0].Fields()
	_ = tokenMixinFields0
	tokenFields := schema.Token{}.Fields()
	_ = tokenFields
	// tokenDescCreateTime is the schema descriptor for create_time field.
	tokenDescCreateTime := tokenMixinFields0[0].Descriptor()
	// token.DefaultCreateTime holds the default value on creation for the create_time field.
	token.DefaultCreateTime = tokenDescCreateTime.Default.(func() time.Time)
	// tokenDescUpdateTime is the schema descriptor for update_time field.
	tokenDescUpdateTime := tokenMixinFields0[1].Descriptor()
	// token.DefaultUpdateTime holds the default value on creation for the update_time field.
	token.DefaultUpdateTime = tokenDescUpdateTime.Default.(func() time.Time)
	// token.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	token.UpdateDefaultUpdateTime = tokenDescUpdateTime.UpdateDefault.(func() time.Time)
	// tokenDescToken is the schema descriptor for token field.
	tokenDescToken := tokenFields[0].Descriptor()
	// token.TokenValidator is a validator for the "token" field. It is called by the builders before save.
	token.TokenValidator = tokenDescToken.Validators[0].(func(string) error)
}
