# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Auth API
    version: 0.0.1
paths:
    /v1/accounts:
        get:
            tags:
                - Auth
            operationId: Auth_ListAccount
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListAccountReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - Auth
            operationId: Auth_CreateAccount
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateAccountRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateAccountReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/accounts/{id}:
        get:
            tags:
                - Auth
            operationId: Auth_GetAccount
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAccountReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - Auth
            operationId: Auth_UpdateAccount
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int64
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateAccountRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateAccountReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - Auth
            operationId: Auth_DeleteAccount
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteAccountReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/tokens/generate:
        post:
            tags:
                - Auth
            operationId: Auth_CreateToken
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateTokenRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateTokenReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/tokens/refresh:
        post:
            tags:
                - Auth
            operationId: Auth_RefreshToken
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RefreshTokenRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RefreshTokenReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/tokens/revoke:
        post:
            tags:
                - Auth
            operationId: Auth_RevokeToken
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RevokeTokenRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RevokeTokenReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        Account:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                email:
                    type: string
                type:
                    type: string
                status:
                    type: boolean
        CreateAccountReply:
            type: object
            properties:
                Account:
                    $ref: '#/components/schemas/Account'
        CreateAccountRequest:
            type: object
            properties:
                email:
                    type: string
                secret:
                    type: string
                type:
                    type: string
                status:
                    type: boolean
        CreateTokenReply:
            type: object
            properties:
                token:
                    $ref: '#/components/schemas/Token'
        CreateTokenRequest:
            type: object
            properties:
                email:
                    type: string
                secret:
                    type: string
        DeleteAccountReply:
            type: object
            properties: {}
        GetAccountReply:
            type: object
            properties:
                Account:
                    $ref: '#/components/schemas/Account'
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        ListAccountReply:
            type: object
            properties:
                results:
                    type: array
                    items:
                        $ref: '#/components/schemas/Account'
        RefreshTokenReply:
            type: object
            properties:
                token:
                    $ref: '#/components/schemas/Token'
        RefreshTokenRequest:
            type: object
            properties:
                token:
                    type: string
        RevokeTokenReply:
            type: object
            properties: {}
        RevokeTokenRequest:
            type: object
            properties:
                token:
                    type: string
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        Token:
            type: object
            properties:
                accessToken:
                    type: string
                refreshToken:
                    type: string
        UpdateAccountReply:
            type: object
            properties:
                Account:
                    $ref: '#/components/schemas/Account'
        UpdateAccountRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                email:
                    type: string
                secret:
                    type: string
                type:
                    type: string
                status:
                    type: boolean
tags:
    - name: Auth
